{"version":3,"file":"index.js","sources":["../src/util.ts","../src/vdom.ts","../src/create-ref.ts","../src/component.ts"],"sourcesContent":["export const deepFreeze = (obj: any) => {\n    Object.values(obj).forEach(value => {\n        if(typeof value === 'object' && !Object.isFrozen(value)) {\n            deepFreeze(value);\n        }\n    });\n\n    return Object.freeze(obj);\n};\n\nexport const kindOf = (v: any) => typeof v;\n\nexport const isFn = (v: any) => kindOf(v) === 'function';","import { VNode, VText } from \"./types\";\n\nimport { kindOf } from \"./util\";\n\nconst TEXT_NODE = '#text';\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nconst EVENT_LISTENER_RGX = /^on/;\n\nexport const h = (type: string, props: any, ...children: any[]): VNode => \n    ({ type, props, children });\n\nexport const svg = (type: string, props: any, ...children: any[]): VNode => \n    ({ type, props, children, isSvg: true });\n\nexport const text = (data: any): VText => ({ type: TEXT_NODE, data });\n\nconst strToClassList = (str: any) => str.trim().split(/\\s+/);\n\nconst setProp = (node: Element, key: string, value: any) => {\n    if(key === 'key') {\n\n    } else if(key === 'ref') {\n        value(node);\n    } else if(value == null || value === false) {\n        node.removeAttribute(key);\n    } else if(key === 'style' && kindOf(value) !== 'string') {\n        patchStyles(node as HTMLElement, {}, value);\n    } else {\n        if(EVENT_LISTENER_RGX.test(key)) {\n            node[key] = value;\n        } else if(key === 'value') {\n            (node as HTMLInputElement).value = value;\n        } else {\n            node.setAttribute(key, value);\n        }\n    }\n};\n\nconst createDomNode = (vnode: VNode|VText) => {\n    if(!vnode) {\n        return;\n    }\n\n    if(vnode.type === TEXT_NODE) {\n        const textNode = document.createTextNode((vnode as VText).data);\n        \n        vnode.node = textNode;\n\n        return textNode;\n    }\n\n    const { type, props, children } = vnode as VNode;\n\n    const node = (vnode as VNode).isSvg \n        ? document.createElementNS(SVG_NS, type) \n        : document.createElement(type);\n\n    for(const [key, value] of Object.entries(props)) {\n        setProp(node, key, value);\n    }\n\n    if(children.length) {\n        const fragment = document.createDocumentFragment();\n\n        children.forEach(vChild => {\n            if(!vChild) {\n                return;\n            }\n\n            const childNode = createDomNode(vChild);\n\n            fragment.appendChild(childNode);\n        });\n\n        node.appendChild(fragment);\n    }\n\n    (vnode as VNode).node = node;\n\n    return node;\n};\n\nconst patchStyles = (\n    node: HTMLElement | SVGElement, \n    oldStyles: object, \n    newStyles: object\n) => {\n    const styles = { ...oldStyles, ...newStyles };\n\n    for(const [prop, value] of Object.entries<string>(styles)) {\n        const oldStyleValue = oldStyles[prop];\n\n        if(newStyles[prop]) {\n            if(oldStyleValue !== value) {\n                if(prop[0] === '-') {\n                    node.style.setProperty(prop, value);\n                } else {\n                    node.style[prop] = value;\n                }\n            }\n        } else {\n            node.style.removeProperty(prop);\n        }\n    }\n};\n\nconst patchClassList = (\n    node: HTMLElement | SVGElement, \n    oldClassList: string[], \n    newClassList: string[]\n) => {\n    const classes = [...oldClassList, ...newClassList];\n\n    for(let i = 0; i < classes.length; i++) {\n        const className = classes[i];\n\n        if(!oldClassList.includes(className)) {\n            node.classList.add(className);\n        } else if(!newClassList.includes(className)) {\n            node.classList.remove(className);\n        }\n    }\n};\n\nconst patchChildren = (\n    node: HTMLElement | SVGElement, \n    oldChildren: (VNode|VText)[], \n    newChildren: (VNode|VText)[]\n) => {\n    const children = Array.from(node.children);\n\n    const length = Math.max(oldChildren.length, newChildren.length);\n\n    for(let i = 0; i < length; i++) {\n        const oldChild = oldChildren[i];\n        const newChild = newChildren[i];\n\n        if(oldChild) {\n            patch(node, oldChild, newChild);\n        } else if(newChild) {\n            const nodeChild = children[i];\n            const newChildNode = createDomNode(newChild);\n\n            if(nodeChild) {\n                node.insertBefore(newChildNode, nodeChild);\n            } else {\n                node.appendChild(newChildNode);\n            }\n        }\n    }\n};\n\nconst patchProps = (node: HTMLElement | SVGElement, oldProps: object, newProps: object) => {\n    const props = { ...oldProps, ...newProps };\n\n    for(const [key, value] of Object.entries(props)) {\n        if(Reflect.has(newProps, key)) {\n            const oldValue = oldProps[key];\n\n            if(oldValue !== value) {\n                if(key === 'class') {\n                    patchClassList(\n                        node, \n                        strToClassList(oldValue), \n                        strToClassList(value)\n                    );\n                } else if(key === 'style' && kindOf(value) !== 'string') {\n                    patchStyles(\n                        node,\n                        oldValue,\n                        value as object\n                    );\n                } else {\n                    setProp(node, key, value);\n                }\n            }\n        } else {\n            node.removeAttribute(key);\n        }\n    }\n};\n\nconst destroyVNode = (vnode: VNode|VText) => {\n    if(vnode.type !== TEXT_NODE) {\n        let child: ChildNode;\n        while(child = vnode.node.lastChild) {\n            child.remove();\n        }\n    }\n\n    vnode.node.remove();\n\n    vnode.node = null;\n};\n\nexport const patch = (\n    rootNode: HTMLElement|SVGElement|ShadowRoot, \n    oldTree: any, \n    newTree: any\n) => {\n    if(!oldTree && newTree) {\n        const node = createDomNode(newTree);\n\n        rootNode.appendChild(node);\n    } else if(!newTree) {\n        destroyVNode(oldTree);\n    } else if(oldTree.type === newTree.type) {\n        if(oldTree.type === TEXT_NODE) {\n            if(oldTree.data !== newTree.data) {\n                oldTree.node.data = newTree.data;\n            }\n        } else if(oldTree.key === newTree.key) {\n            patchChildren(\n                oldTree.node as HTMLElement, \n                oldTree.children, \n                newTree.children\n            );\n    \n            patchProps(\n                oldTree.node, \n                oldTree.props, \n                newTree.props\n            );\n        }\n\n        newTree.node = oldTree.node;\n    }  else {\n        const newNode = createDomNode(newTree);\n\n        rootNode.insertBefore(newNode, oldTree.node);\n\n        destroyVNode(oldTree);\n    }\n};","export function createRef(current = null) {\n    return { current }\n}","import { VNode, VText, stringOrNull } from \"./types\";\n\nimport { deepFreeze, isFn } from \"./util\";\n\nimport { patch } from \"./vdom\";\n\nexport default class Component extends HTMLElement {\n\n    props = {}\n\n    #currentState = null\n\n    #frameRequest = null\n\n    #oldTree = null\n\n    #hasLoaded = false\n\n    #hasRendered = false\n\n    rootNode: this | ShadowRoot;\n\n    static propTypes: any;\n\n    set state(newState) {\n        this.#currentState = deepFreeze(newState);\n    }\n\n    get state() {\n        return this.#currentState;\n    }\n\n    constructor() {\n        super();\n\n        this.rootNode = this;\n    }\n\n    #reRender = async () => {\n        await this.componentWillRender();\n\n        const newTree = this.render(this.state, this.props);\n\n        patch(this.rootNode, this.#oldTree, newTree);\n\n        this.#oldTree = newTree;\n\n        this.componentDidRender();\n    }\n\n    #requestReRender() {\n        if(this.#frameRequest) {\n            cancelAnimationFrame(this.#frameRequest);\n        }\n\n        this.#frameRequest = requestAnimationFrame(this.#reRender);\n    }\n\n    setState(newState: any) {\n        this.componentShouldUpdate();\n\n        const nextState = isFn(newState) ? newState(this.state) : newState;\n\n        this.state = nextState;\n\n        this.#requestReRender();\n    }\n\n    #updateProps() {\n        const attributes = Array.from(this.attributes);\n\n        for(const { name, value } of attributes) {\n            this.#updateProp(name, value);\n        }\n    }\n\n    #updateProp(name: string, value: stringOrNull) {\n        if(!(this.constructor as typeof Component).propTypes) {\n            throw new Error(`No PropTypes have been defined.`);\n        }\n\n        const type = (this.constructor as typeof Component).propTypes[name];\n\n        if(!type) {\n            throw new Error(`PropType for property ${name} has not been specified.`);\n        }\n\n        const oldValue = this.props[name];\n\n        const newValue = type(value);\n\n        this.componentShouldUpdate(oldValue, newValue, name);\n        \n        this.props[name] = newValue;\n    }\n\n    async connectedCallback() {\n        this.#updateProps();\n\n        if(!this.#hasLoaded) {\n            this.#hasLoaded = true;\n\n            await this.componentWillLoad();\n        }\n\n        this.#requestReRender();\n\n        this.componentDidLoad();\n\n        this.componentDidConnect();\n    }\n\n    disconnectedCallback() {\n        patch(this.rootNode, this.#oldTree, null);\n\n        this.componentDidDisconnect();\n    }\n\n    attributeChangedCallback(propName: string, oldValue: stringOrNull, newValue: stringOrNull) {\n        if(newValue === oldValue) {\n            return;\n        }\n        \n        this.#updateProp(propName, newValue);\n\n        this.#requestReRender();\n    }\n\n    componentDidConnect() {}\n\n    componentDidDisconnect() {}\n\n    async componentWillLoad() {}\n\n    componentDidLoad() {}\n\n    componentShouldUpdate(_oldValue?: any, _newValue?: any, _propName?: string) {}\n\n    async componentWillRender() {}\n\n    componentDidRender() {}\n\n    render(_state: any, _props: any): VNode|VText {\n        throw new Error('render method has not been defined.');\n    }\n\n}"],"names":[],"mappings":"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"}